---
# TODO: convert to module at some point
- name: Install packages
  become: true
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
    update_cache: true
  vars:
    packages:
      - python3-pip
      - python3-venv

- name: Set python virtualenv path
  ansible.builtin.set_fact:
    internal__python_venv: "{{ ansible_env.HOME }}/.venv"

- name: Install backblaze b2-cli
  ansible.builtin.pip:
    name: b2
    virtualenv_command: "{{ discovered_interpreter_python }} -m venv"
    virtualenv: "{{ internal__python_venv }}"

- name: Set b2 backblaze b2-cli path
  ansible.builtin.set_fact:
    internal__b2_path: "{{ internal__python_venv }}/bin/b2"

- name: Authorize b2 accounts
  ansible.builtin.command: >-
    {{ internal__b2_path }}
    authorize-account {{ item.master_key_id }} {{ item.master_key }}
    --profile {{ item.profile_name }}
  loop: "{{ backblaze_b2__setup_buckets__account_dict_list }}"
  changed_when: true

- name: Register all bucket names for profile '{{ backblaze_b2__setup_buckets__account_dict_list[0].profile_name }}'
  ansible.builtin.shell: >-
    {{ internal__b2_path }} list-buckets --profile {{ profile_name }} |
    awk '{print $3}'
  register: backblaze_b2__setup_buckets__bucket_names_result
  vars:
    profile_name: >-
      {{ backblaze_b2__setup_buckets__account_dict_list[0].profile_name }}
  changed_when: true

- name: Set if buckets already exists fact
  ansible.builtin.set_fact:
    backblaze_b2__setup_buckets__buckets_already_exists: >-
      {{
        backblaze_b2__setup_buckets__account_dict_list[0].bucket_name in
        backblaze_b2__setup_buckets__bucket_names_result.stdout_lines
      }}

- name: Create buckets with keys
  when: not backblaze_b2__setup_buckets__buckets_already_exists
  block:
    - name: Create buckets
      ansible.builtin.command: >-
        {{ internal__b2_path }} create-bucket --profile {{ item.profile_name }}
        {{ item.bucket_name }}
        allPrivate
      loop: "{{ backblaze_b2__setup_buckets__account_dict_list }}"
      register: backblaze_b2__setup_buckets__create_buckets_result
      changed_when: true

    - name: Create keys for buckets
      ansible.builtin.command: >-
        {{ internal__b2_path }} create-key
        --profile {{ item.profile_name }}
        --bucket {{ item.bucket_name }}
        {{ item.bucket_name }}{{ backblaze_b2__setup_buckets__bucket_key_suffix }}
        readFileLegalHolds,readFileRetentions,deleteFiles,listBuckets,\
        listFiles,readBucketEncryption,readBucketReplications,\
        readBuckets,readFiles,shareFiles,writeBucketEncryption,\
        writeBucketReplications,writeFiles
      loop: "{{ backblaze_b2__setup_buckets__account_dict_list }}"
      register: backblaze_b2__setup_buckets__create_keys_result
      changed_when: true

    - name: Name keys
      ansible.builtin.set_fact:
        backblaze_b2__setup_buckets__created_keys: >-
          {{ backblaze_b2__setup_buckets__created_keys | default([]) + [named] }}
      loop: "{{ backblaze_b2__setup_buckets__create_keys_result.results }}"
      vars:
        splitted: "{{ item.stdout | split(' ') }}"
        named: "{{ {'bucket_key_id': splitted[0], 'bucket_key': splitted[1]} }}"

    - name: Combine everything
      ansible.builtin.set_fact:
        backblaze_b2__setup_buckets__account_dict_list: "{{ appended[1:] }}"
      loop: "{{ backblaze_b2__setup_buckets__account_dict_list }}"
      loop_control:
        index_var: index
      vars:
        bucket_id: >-
          {{
            {'bucket_id': backblaze_b2__setup_buckets__create_buckets_result.results[index].stdout}
          }}
        bucket_key_data: "{{ backblaze_b2__setup_buckets__created_keys[index] }}"
        combined: >-
          {{
            [
              backblaze_b2__setup_buckets__account_dict_list[index] |
              combine(item, bucket_id, bucket_key_data)
            ]
          }}
        appended: "{{ backblaze_b2__setup_buckets__account_dict_list + combined }}"

    - name: Create destination replication rule(s)
      ansible.builtin.shell: >-
        {{ internal__b2_path }} update-bucket --profile {{ item.profile_name }}
        --replication '{{ replication_body }}' {{ item.bucket_name }}
      loop: "{{ backblaze_b2__setup_buckets__account_dict_list[1:] }}"
      loop_control:
        index_var: index
      vars:
        dict_string: >-
          {
            "asReplicationDestination": {
                "sourceToDestinationKeyMapping": {
                    {{ backblaze_b2__setup_buckets__account_dict_list[0].bucket_key_id }}:
                    {{ item.bucket_key_id }}
                }
            }
          }
        replication_body: "{{ dict_string | from_yaml | to_json }}"
      changed_when: true

    - name: Create source replication rule(s)
      ansible.builtin.shell: >-
        {{ internal__b2_path }} update-bucket
        --profile {{ source.profile_name }}
        --replication '{{ replication_body }}' {{ source.bucket_name }}
      loop: "{{ backblaze_b2__setup_buckets__account_dict_list[1:] }}"
      loop_control:
        index_var: index
      vars:
        source: "{{ backblaze_b2__setup_buckets__account_dict_list[0] }}"
        dict_string: >-
          {
            "asReplicationSource": {
                "replicationRules": [
                    {
                        "destinationBucketId": {{ item.bucket_id }},
                        "isEnabled": true,
                        "priority": {{ 255 - index }},
                        "replicationRuleName":
                        {{ source.bucket_name + "-" +  index|string + "-rule" }}
                    }
                ],
                "sourceApplicationKeyId": {{ source.bucket_key_id }}
            }
          }
        replication_body: "{{ dict_string | from_yaml | to_json }}"
      changed_when: true
  rescue:
    - name: Delete b2 buckets
      ansible.builtin.command: >-
        {{ internal__b2_path }}
        delete-bucket {{ item.bucket_name }}
        --profile {{ item.profile_name }}
      loop: "{{ backblaze_b2__setup_buckets__account_dict_list }}"
      changed_when: true


- name: Set result
  ansible.builtin.set_fact:
    backblaze_b2__setup_buckets__result: >-
      {{
        backblaze_b2__setup_buckets__result | default([]) +
        [
          {
            "bucket_name": item.bucket_name,
            "bucket_key": item.bucket_key,
            "bucket_key_id": item.bucket_key_id
          }
        ]
      }}
  loop: "{{ backblaze_b2__setup_buckets__account_dict_list }}"

- name: Clear accounts
  ansible.builtin.command: >-
    {{ internal__b2_path }} clear-account 
    --profile {{ item.profile_name }}
  loop: "{{ backblaze_b2__setup_buckets__account_dict_list }}"

- name: Delete b2 folder
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/b2"
    state: absent
