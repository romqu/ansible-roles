---
# - name: Get disk with boot partition
#   ansible.builtin.shell: lsblk -sdln -o NAME,MOUNTPOINT | awk '$2 == "/boot"' | awk '{ print $1 }' | sed 's/.$//'
#   register: get_boot_disk_result
#   changed_when: get_boot_disk_result.stdout_lines | length != 1

# - name: Get disk(s) with mounted partition(s)
#   ansible.builtin.shell: lsblk -sdlfn -o NAME,MOUNTPOINT,TYPE | awk 'NF!=2' | awk '$3 != "lvm"' | awk '{ print $1 }' | sed 's/[0-9]//g' | uniq
#   register: get_disk_mounted_result
#   changed_when: get_boot_disk_result.stdout_lines | length > 0

#- name: Get disk(s) without 
#  ansible.builtin.shell: lsblk -sdlfn -o NAME,MOUNTPOINT,TYPE | awk '$3 != "lvm"' | awk '{ print $1 }' | sed 's/[0-9]//g' | uniq --unique
#  register: get_hard_drives__result
#  changed_when: get_hard_drives__result.stdout_lines | length > 0
#  when: get_hard_drives__unmounted


- name: Get hdd(s) path(s)
  ansible.builtin.shell: >-
    lsblk -lnd -o PATH,TYPE,ROTA |
    awk '$2 == "disk"' |
    awk '$3 == "1"' |
    awk '{ print $1 }'
  register: hdd__get_all__paths_result
  changed_when: true

- name: Set fact 'hdd__get_all__paths_result'
  ansible.builtin.set_fact:
    hdd__get_all__paths_result:
      "{{ hdd__get_all__paths_result.stdout_lines }}"

- name: Get hdd(s) path(s) with number of partition(s)
  ansible.builtin.shell: >-
    lsblk -ln  {{ item }} |
    echo
    "{
      \"disk_path\": \"{{ item }}\",
      \"partitions_total\": $(tail -n +2 | wc -l)
    }"
  register: hdd__get_all__paths_and_partitions_result_temp
  loop: "{{ hdd__get_all__paths_result }}"
  changed_when: true

- name: Set fact 'hdd__get_all__paths_and_partitions_result'
  ansible.builtin.set_fact:
    hdd__get_all__paths_and_partitions_result:
      "{{ append }}"
  loop: "{{ hdd__get_all__paths_and_partitions_result_temp.results }}"
  vars:
    item_dict: "{{ item.stdout | from_json | from_yaml }}"
    append: >-
      {{
         hdd__get_all__paths_and_partitions_result |
         default([]) + [item_dict]
      }}

- name: Set fact 'hdd__get_all__no_partitions_disk_paths_result'
  ansible.builtin.set_fact:
    hdd__get_all__no_partitions_disk_paths_result: 
      "{{ append }}"
  loop: "{{ hdd__get_all__paths_and_partitions_result }}"
  vars:
    append: >-
      {{
         hdd__get_all__no_partitions_disk_paths_result |
         default([]) + [item.disk_path]
      }}
  when: item.partitions_total == 0



#- name: Get hdd(s) without filesystem
#  ansible.builtin.shell: >-
#    lsblk -sdlfn -o NAME,ROTA,FSTYPE | awk '$2 == "1"' 
#    | awk '$3 == ""' | awk '{ print $1 }' | sed 's/[0-9]//g' 
#    | uniq --unique
#  register: hdd__get_all__no_filesystem_result
#  changed_when:
#    hdd__get_all__no_filesystem_result.stdout_lines | length > 0
#  when: hdd__get_all__no_filesystem

#- name: Get hdd partition(s) with filesystem
#  ansible.builtin.shell: >-
#    lsblk -sdlfn -o NAME,FSTYPE,TYPE | awk '$1!~/sda/'
#    | awk '$1~/sd/'
#    | awk '$2 == "{{ hdd__get_all__with_filesystem_type }}"'
#    | awk '{ print $1 }'
#  register: hdd__get_all__with_filesystem_result
#  changed_when:
#    hdd__get_all__with_filesystem_result.stdout_lines | length > 0
#  when: hdd__get_all__with_filesystem

#- name: Set fact 'hdd__get_all__no_filesystem_result'
#  ansible.builtin.set_fact:
#    hdd__get_all__no_filesystem_result:
#      "{{ hdd__get_all__no_filesystem_result.stdout_lines }}"
#  when: hdd__get_all__no_filesystem

#- name: Set fact 'hdd__get_all__with_filesystem_result'
#  ansible.builtin.set_fact:
#    hdd__get_all__with_filesystem_result: 
#      "{{ hdd__get_all__with_filesystem_result.stdout_lines }}"
#  when: hdd__get_all__with_filesystem

#blkid -s UUID -o value /dev/sdc