bitwarden__get_password__result: "{{ lookup('community.general.bitwarden', test_vm__bitwarden__item_name, field='password') | regex_replace(\"^(\\[')(.*)('\\])$\", '\\2') }}"

ansible_become_pass: "{{ bitwarden__get_password__result }}"

sshd__setup_config__port: "{{ test_vm__ssh_port }}"

hdd__wipe__disk_paths: "{{ hdd__get_all__no_partitions_disk_paths_result }}"

luks__encrypt__disk_path_list: "{{ hdd__get_all__no_partitions_disk_paths_result }}"
luks__encrypt__keyfile_file_name: "2a8b1716-97a3-4a29-b4f8-c429d74cf46f.key"
luks__encrypt__keyfile_dir_path: "/etc/cryptsetup-keys.d/"
luks__encrypt__keyfile_file_path: >-
  {{ luks__encrypt__keyfile_dir_path }}{{ luks__encrypt__keyfile_file_name }}
luks__encrypt__passphrase: "{{ bitwarden__get_password__result }}"
luks__open__disk_path_list: "{{ hdd__get_all__no_partitions_disk_paths_result }}"
luks__open__keyfile_path: "{{ luks__encrypt__keyfile_file_path }}"

zfs__create_pool__disk_path_list: >-
  {{ luks__open__disk_data_list_result[:2] | map(attribute='partition_path') }}
zfs__create_pool__type: "mirror"
zfs__create_pool__pool_name: "zdata"
zfs__create_pool__mount_path: "/mnt/{{ zfs__create_pool__pool_name }}"

crypttab__add_entry__zfs_miror_disk_data_list: >-
  {{ 
    luks__open__disk_data_list_result[:2] |
    map('combine', {'options': ['luks','discard']})
  }}
crypttab__add_entry__ext4_standalone_disk_data_list: >-
  {{ 
    luks__open__disk_data_list_result[2:] |
    map('combine', {'options': ['noauto','nofail']})
  }}

crypttab__add_entry__disk_data_list: >-
  {{
    crypttab__add_entry__ext4_standalone_disk_data_list +
    crypttab__add_entry__zfs_miror_disk_data_list
  }}
crypttab__add_entry__keyfile_file_path: "{{ luks__encrypt__keyfile_file_path }}"
hdd__create_filesystem__disk_data: >-
  {{ 
    luks__open__disk_data_list_result[2:] |
    map('combine', {'filesystem_type': 'ext4'})
  }}

fstab__add_entry__data_list: >-
  {{ 
    luks__open__disk_data_list_result[2:] |
    map('combine',
        {
          'partition_filesystem': 'ext4',
          'mount_root_dir_path': '/mnt',
          'mount_root_dir_name': 'mnt',
          'mount_dir_owner': shared__test_vm__username,
          'systemd_idle_timeout_sec': 30,
        }
       )
  }}

zfs__create_dataset__data_list:
  - pool_name: "{{ zfs__create_pool__pool_name }}"
    dataset_name: "backup"

backup__create_dirs__zfs_data_list_temp:
  - root_dir_path: >-
      {{ zfs__create_pool__mount_path }}/
      {{- zfs__create_dataset__data_list[0].dataset_name }}
    backup_dir_name: "backup"
    backup_dir_path: >-
      {{ zfs__create_pool__mount_path }}/
      {{- zfs__create_dataset__data_list[0].dataset_name }}/backup"
    backup_dir_owner: "{{ shared__test_vm__username }}"

backup__create_dirs__ext4_data_list_temp_0: >-
  {% set ns = namespace(updated_json='',json_list=[]) %}
  {% for item in fstab__add_entry__data_list %}
    {% set root_dir_path =  item.mount_root_dir_path + "/" + item.partition_name %}
    {% set backup_dir_name = "backup" %}
    {% set backup_dir_path =  root_dir_path + "/" + backup_dir_name %}
    {% set ns.updated_json =
      {
        'root_dir_path': root_dir_path,
        'backup_dir_name': backup_dir_name,
        'backup_dir_path': backup_dir_path,
        'backup_dir_owner': shared__test_vm__username
      }
    %}
    {% set _ = ns.json_list.append(ns.updated_json) %}
  {% endfor %}
  {{ ns.json_list }}

backup__create_dirs__ext4_data_list_temp_1: >-
  {{ backup__create_dirs__ext4_data_list_temp_0 | trim | to_json | from_yaml }}

backup__create_dirs__data_list: >-
  {{ 
    backup__create_dirs__zfs_data_list_temp + 
    (backup__create_dirs__ext4_data_list_temp_1 )
  }}
backup__create_dirs__main_dir_marker_file_name: "{{ host_uuid }}"
bitwarden_get_field__data_dict_list:
  - bitwarden__get_field__fact_name: "bitwarden__get_field__b2_eu_master_key"
    bitwarden__get_field__entry_name: "backblaze-eu"
    bitwarden__get_field__field_name: "masterApplicationKey"

  - bitwarden__get_field__fact_name: "bitwarden__get_field__b2_us_west_master_key_id"
    bitwarden__get_field__entry_name: "backblaze-us-west"
    bitwarden__get_field__field_name: "masterKeyId"

  - bitwarden__get_field__fact_name: "bitwarden__get_field__b2_us_west_master_key"
    bitwarden__get_field__entry_name: "backblaze-us-west"
    bitwarden__get_field__field_name: "masterApplicationKey"

backblaze_b2__setup_buckets__bucket_name_uuid: "{{ host_uuid }}"
backblaze_b2__setup_buckets__account_dict_list: 
  - master_key_id: "" # "{{ bitwarden__get_field__b2_eu_master_key_id }}"
    master_key: "" # "{{ bitwarden__get_field__b2_eu_master_key }}"
    profile_name: "main"
  - master_key_id: "" # "{{ bitwarden__get_field__b2_us_west_master_key_id }}"
    master_key: "" # "{{ bitwarden__get_field__b2_us_west_master_key }}"
    profile_name: "replication"

############################################################################################################
#     - role: converter_b2_bitwarden
#       vars:
#         - converter_b2_bitwarden___b2_account_data: "{{ backblaze_b2__setup_buckets__account_dict_list__result }}"
#         - converter_b2_bitwarden___field_name: "restic_password"
#         - converter_b2_bitwarden___field_value: "{{ bitwarden__generate_password__result }}"
#     - role: bitwarden__create_item
#       vars:
#         - bitwarden__create_item__type: "login"
#         - bitwarden__create_item__folder_name: "server/home"
#         - bitwarden__create_item__type_login_data: "{{ converter_b2_bitwarden___result }}"
#
# restic__docker_setup__aws_access_key_id: ""
# restic__docker_setup__aws_secret_access_key: ""
# restic__docker_setup__restic_password: "a"
# restic__docker_setup__backup_folder_path_host: "/home/roman/backup"
# restic__docker_setup__backup_folder_path_container: "/data"
# restic__docker_setup__repo_remote_dict:
#   [
#     {
#       "repo": "s3:s3.eu-central-003.backblazeb2.com/testromqu",
#       "forget_args": "--keep-daily 7 --keep-weekly 5 --keep-monthly 12 --keep-yearly 75",
#     }
#   ]
# restic__docker_setup__repo_local_dict:
#   [
#     {
#       "repo": "/home/roman/backup",
#       "forget_args": "--keep-daily 7 --keep-weekly 5 --keep-monthly 12 --keep-yearly 75",
#     }
#   ]
# restic__docker_setup__pushover_user_key: ""
# restic__docker_setup__pushover_token: ""
#
# systemd__create_service__file_name: "restic-backup"
# systemd__create_service__description: "restic-backup"
# systemd__create_service__group: "docker"
# systemd__create_service__exec_start: >-
#   nice -n -0 ionice -c 2 -n 0 docker compose -f
#   "{{ restic__docker_setup__compose_file_path }}" up -
# systemd__create_timer__file_name: "{{ systemd__create_service__file_name }}"
# systemd__create_timer__description: "{{ systemd__create_service__description + ' timer' }}"
# systemd__create_timer__unit: "{{ systemd__create_service__file }}"
# systemd__create_timer__on_calendar: "*-*-* 12:00:00"
#
# immich__docker_setup__dir_path: "/home/roman/docker/immich/"
# immich__docker_setup__config_file_path: "/home/roman/docker/immich/immich.config"
# immich__docker_setup__postgres_db_password: "a"
# immich__docker_setup__postgres_backup_dir_path: "/home/roman/docker/immich/pg-backup"
# immich__docker_setup__upload_dir_path: "/home/roman/docker/immich/upload"
# immich__docker_setup__library_dir_path: "/home/roman/docker/immich/library"
# immich__docker_setup__thumbs_dir_path: "/home/roman/docker/immich/thumbs"
# immich__docker_setup__profile_dir_path: "/home/roman/docker/immich/profile"
# immich__docker_setup__encoded_video_dir_path: "/home/roman/docker/immich/encoded-video"
# immich__docker_setup__ports_host_ip: "0.0.0.0"
# immich__docker_setup__user_id: "{{ ansible_facts.user_uid }}"
# immich__docker_setup__group_id: "{{ ansible_facts.user_gid }}"
#
# caddy__docker_setup__dir_path: "/home/roman/docker/caddy/"
# caddy__docker_setup__data_backup_dir_path: "/home/roman/docker/caddy/backup"
# caddy__docker_setup__sub_configs_dir_name: "conf.d"
# caddy__docker_setup__sub_configs_dir_path:
#   "{{ caddy__docker_setup__dir_path }}/{{ caddy__docker_setup__sub_configs_dir_name }}"
# caddy__docker_setup__email: "caddy@romqu.de"
# caddy__docker_setup__acme_ca_url: "https://acme-staging-v02.api.letsencrypt.org/directory"
# caddy__add_site__sub_configs_dir_path: "{{ caddy__docker_setup__sub_configs_dir_path }}"
# caddy__add_site__file_name: "test"
# caddy__add_site__tls_enabled: false
# caddy__add_site__domain_name: ""
#
# tailscale__docker_setup__dir_path: "/home/roman/docker/tailscale/"
# tailscale__docker_setup__auth_key:
#   ""

# sudo zfs zpool destroy zdata
# sudo cryptsetup close sdb0_crypt
# sudo cryptsetup close sdc0_crypt
# sudo cryptsetup close sdd0_crypt
# sudo dd if=/dev/zero of=/dev/sdb bs=4096
# sudo dd if=/dev/zero of=/dev/sdc bs=4096
# sudo dd if=/dev/zero of=/dev/sdd bs=4096
