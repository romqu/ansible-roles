bitwarden__get_password__result: >-
  {{ 
    lookup('community.general.bitwarden', test_vm__bitwarden__item_name, field='password') |
    first 
  }}

############################################################################

ansible_become_pass: "{{ bitwarden__get_password__result }}"

############################################################################

sshd__setup_config__port: "{{ test_vm__ssh_port }}"

############################################################################

hdd__wipe__disk_paths: "{{ hdd__get_all__no_partitions_disk_paths_result }}"

############################################################################

luks__encrypt__disk_path_list: "{{ hdd__get_all__no_partitions_disk_paths_result }}"
luks__encrypt__keyfile_file_name: "2a8b1716-97a3-4a29-b4f8-c429d74cf46f.key"
luks__encrypt__keyfile_dir_path: "/etc/cryptsetup-keys.d/"
luks__encrypt__keyfile_file_path: >-
  {{ luks__encrypt__keyfile_dir_path }}{{ luks__encrypt__keyfile_file_name }}
luks__encrypt__passphrase: "{{ bitwarden__get_password__result }}"
############################################################################

luks__open__disk_path_list: "{{ hdd__get_all__no_partitions_disk_paths_result }}"
luks__open__keyfile_path: "{{ luks__encrypt__keyfile_file_path }}"

############################################################################

hdd__zfs_mirror_list: "{{ luks__open__disk_data_list_result[:2] }}"
hdd__ext4_list: "{{ luks__open__disk_data_list_result[2:] }}"

############################################################################

zfs__create_pool__disk_path_list: >-
  {{ hdd__zfs_mirror_list | map(attribute='partition_path') }}
zfs__create_pool__type: "mirror"
zfs__create_pool__pool_name: "zdata"
zfs__create_pool__mount_path: "/mnt/{{ zfs__create_pool__pool_name }}"

############################################################################

crypttab__add_entry__zfs_miror_disk_data_list: >-
  {{ 
    hdd__zfs_mirror_list |
    map('combine', {'options': ['luks','discard']})
  }}
crypttab__add_entry__ext4_standalone_disk_data_list: >-
  {{ 
    hdd__ext4_list |
    map('combine', {'options': ['noauto','nofail']})
  }}
crypttab__add_entry__disk_data_list: >-
  {{
    crypttab__add_entry__ext4_standalone_disk_data_list +
    crypttab__add_entry__zfs_miror_disk_data_list
  }}
crypttab__add_entry__keyfile_file_path: "{{ luks__encrypt__keyfile_file_path }}"

############################################################################

hdd__create_filesystem__disk_data: >-
  {{ 
    hdd__ext4_list |
    map('combine', {'filesystem_type': 'ext4'})
  }}

############################################################################

fstab__add_entry__data_list: >-
  {{ 
    hdd__ext4_list |
    map('combine',
        {
          'partition_filesystem': 'ext4',
          'mount_root_dir_path': '/mnt',
          'mount_root_dir_name': 'mnt',
          'mount_dir_owner': shared__test_vm__username,
          'systemd_idle_timeout_sec': 30,
        }
       )
  }}

############################################################################

zfs__create_dataset__data_list:
  - pool_name: "{{ zfs__create_pool__pool_name }}"
    dataset_name: "zbackup"

############################################################################

backup__create_dirs__convert_from_zfs_dataset_input: >-
  {{ 
    zfs__create_dataset__data_list |
    map('combine', {
      'backup_dir_owner': shared__test_vm__username,
      'pool_mount_path': zfs__create_pool__mount_path
     }
    )
  }}
backup__create_dirs__convert_from_fstab_input: >-
  {{ 
    fstab__add_entry__data_list |
    map('combine', {'backup_dir_owner': shared__test_vm__username })
  }}
backup__create_dirs__convert_from_ext4_partitions_input: >-
  {{ 
    hdd__get_all__ext4_partition_mount_dir_paths_result |
    map('combine', {'backup_dir_owner': shared__test_vm__username })
  }}

backup__create_dirs__main_dir_marker_file_name: "{{ host_uuid }}"

############################################################################

backup__source_dir_path: >-
  {{ backup__create_dirs__convert_from_zfs_dataset_output[0].backup_dir_path }}

############################################################################

backblaze_b2__bucket_name__main: "{{ ansible_hostname }}-main-{{ host_uuid }}"
backblaze_b2__bucket_name__replication: "{{ ansible_hostname }}-replication-{{ host_uuid }}"

############################################################################

bitwarden_get_field__data_dict_list:
  - bitwarden__get_field__fact_name: "bitwarden__get_field__b2_eu_master_key"
    bitwarden__get_field__entry_name: "backblaze-eu"
    bitwarden__get_field__field_name: "masterApplicationKey"

  - bitwarden__get_field__fact_name: "bitwarden__get_field__b2_eu_master_key_id"
    bitwarden__get_field__entry_name: "backblaze-eu"
    bitwarden__get_field__field_name: "masterKeyId"

  - bitwarden__get_field__fact_name: "bitwarden__get_field__b2_us_west_master_key"
    bitwarden__get_field__entry_name: "backblaze-us-west"
    bitwarden__get_field__field_name: "masterApplicationKey"

  - bitwarden__get_field__fact_name: "bitwarden__get_field__b2_us_west_master_key_id"
    bitwarden__get_field__entry_name: "backblaze-us-west"
    bitwarden__get_field__field_name: "masterKeyId"

  - bitwarden__get_field__fact_name: "bitwarden__get_field__b2_main_key_id"
    bitwarden__get_field__entry_name: "{{ backblaze_b2__bucket_name__main }}"
    bitwarden__get_field__field_name: "username"

  - bitwarden__get_field__fact_name: "bitwarden__get_field__b2_main_key"
    bitwarden__get_field__entry_name: "{{ backblaze_b2__bucket_name__main }}"
    bitwarden__get_field__field_name: "password"

  - bitwarden__get_field__fact_name: "bitwarden__get_field__b2_replication_key_id"
    bitwarden__get_field__entry_name: "{{ backblaze_b2__bucket_name__replication }}"
    bitwarden__get_field__field_name: "username"

  - bitwarden__get_field__fact_name: "bitwarden__get_field__b2_replication_key"
    bitwarden__get_field__entry_name: "{{ backblaze_b2__bucket_name__replication }}"
    bitwarden__get_field__field_name: "password"

  - bitwarden__get_field__fact_name: "bitwarden__get_field__pushover_user_key"
    bitwarden__get_field__entry_name: "pushover_user_key"
    bitwarden__get_field__field_name: "password"

  - bitwarden__get_field__fact_name: "bitwarden__get_field__pushover_restic_backup_app_token"
    bitwarden__get_field__entry_name: "pushover_restic_backup_app_token"
    bitwarden__get_field__field_name: "password"

  - bitwarden__get_field__fact_name: "bitwarden__get_field__hetzner_api_token"
    bitwarden__get_field__entry_name: "pushover_restic_backup_app_token"
    bitwarden__get_field__field_name: "password"

############################################################################

backblaze_b2__setup_buckets__account_dict_list:
  - master_key_id: "{{ bitwarden__get_field__b2_eu_master_key_id }}"
    master_key: "{{ bitwarden__get_field__b2_eu_master_key }}"
    profile_name: "main"
    bucket_name: "{{ backblaze_b2__bucket_name__main}}"
    bucket_key_id: "{{ bitwarden__get_field__b2_main_key_id }}"
    bucket_key: "{{ bitwarden__get_field__b2_main_key }}"

  - master_key_id: "{{ bitwarden__get_field__b2_us_west_master_key_id }}"
    master_key: "{{ bitwarden__get_field__b2_us_west_master_key }}"
    profile_name: "replication"
    bucket_name: "{{ backblaze_b2__bucket_name__replication }}"
    bucket_key_id: "{{ bitwarden__get_field__b2_replication_key_id }}"
    bucket_key: "{{ bitwarden__get_field__b2_replication_key }}"

############################################################################

bitwarden__convert_backblaze_b2__input_dict_list: >-
  {{
    backblaze_b2__setup_buckets__result |
    map('combine',
        {
          'folder_name': 'private/server/home'
        }
       )
  }}

############################################################################

bitwarden__create_item__data_dict_list: "{{ bitwarden__convert_backblaze_b2__result }}"

############################################################################

docker__base_dir_path: "{{ ansible_env.HOME }}/docker"

############################################################################

restic__docker_setup__dir_path: "{{ docker__base_dir_path }}/restic"
restic__docker_setup__aws_access_key_id: "{{ bitwarden__get_field__b2_main_key_id }}"
restic__docker_setup__aws_secret_access_key: "{{ bitwarden__get_field__b2_main_key }}"
restic__docker_setup__restic_password: "{{ bitwarden__get_password__result }}"
restic__docker_setup__pushover_user_key: "{{ bitwarden__get_field__pushover_user_key }}"
restic__docker_setup__pushover_app_token: >-
  {{ bitwarden__get_field__pushover_restic_backup_app_token }}
restic__docker_setup__backup_source_dir_path_host: "{{ backup__source_dir_path }}"
restic__docker_setup__backup_source_dir_path_container: "/data"
restic__docker_setup__repo_remote_dict:
  - repo: >-
      s3:s3.eu-central-003.backblazeb2.com/{{ backblaze_b2__bucket_name__main }}
    forget_args: >-
      --keep-daily 7 --keep-weekly 5 --keep-monthly 12 --keep-yearly 75
restic__docker_setup__repo_local_dict: >-
  {{
    (
      (backup__create_dirs__convert_from_fstab_output | default([])) +
      (backup__create_dirs__convert_from_ext4_partitions_output | default([]))
    ) |
    ansible.utils.replace_keys(target=[
      {
        'before':'backup_dir_path',
        'after':'repo'
      }
    ]) |
    map('combine',
      {
        'forget_args': '--keep-daily 7 --keep-weekly 5 --keep-monthly 12 --keep-yearly 75'
      }
     )
  }}

############################################################################

systemd__create_service__file_name: "restic-backup"
systemd__create_service__description: "restic-backup"
systemd__create_service__group: "docker"
systemd__create_service__exec_start: >-
  nice -n -0 ionice -c 2 -n 0 docker compose -f
  {{ restic__docker_setup__compose_file_path }} up -d

############################################################################

systemd__create_timer__file_name: "{{ systemd__create_service__file_name }}"
systemd__create_timer__description: "{{ systemd__create_service__description + ' timer' }}"
systemd__create_timer__unit: "{{ systemd__create_service__file }}"
systemd__create_timer__on_calendar: "*-*-* 12:00:00"

############################################################################################################

caddy__docker_setup__container_name: "caddy"
caddy__docker_setup__ports_host_ip: "0.0.0.0"
caddy__docker_setup__external_network_name: "caddy_external_network"
caddy__docker_setup__dir_path: "{{ docker__base_dir_path }}/caddy"
caddy__docker_setup__config_file_path: "{{ caddy__docker_setup__dir_path }}/Caddyfile"
caddy__docker_setup__data_backup_dir_path: "{{ backup__source_dir_path }}/caddy/data"
caddy__docker_setup__sub_configs_dir_name: "conf.d"
caddy__docker_setup__sub_configs_dir_path: >-
  {{ caddy__docker_setup__dir_path }}/
  {{- caddy__docker_setup__sub_configs_dir_name }}
caddy__docker_setup__email: "caddy@romqu.de"
caddy__docker_setup__acme_ca_url: "https://acme-staging-v02.api.letsencrypt.org/directory"

############################################################################################################

immich__docker_setup__dir_path: "{{ docker__base_dir_path }}/immich"
immich__docker_setup__config_file_path: "{{ immich__docker_setup__dir_path }}/immich.config"
immich__docker_setup__server_container_name: "immich_server"
immich__docker_setup__server_container_exposed_port: "3001"
immich__docker_setup__postgres_db_password: "{{ bitwarden__get_password__result }}"
immich__docker_setup__postgres_backup_dir_path: "{{ backup__source_dir_path }}/immich/pg-backup"
immich__docker_setup__upload_dir_path: "{{ immich__docker_setup__dir_path }}/upload"
immich__docker_setup__library_dir_path: "{{ backup__source_dir_path }}/immich/library"
immich__docker_setup__thumbs_dir_path: "{{ immich__docker_setup__dir_path }}/thumbs"
immich__docker_setup__profile_dir_path: "{{ backup__source_dir_path }}/immich/profile"
immich__docker_setup__encoded_video_dir_path: "{{ immich__docker_setup__dir_path }}/encoded-video"
immich__docker_setup__ports_host_ip: "0.0.0.0"
immich__docker_setup__user_id: "{{ ansible_facts.user_uid }}"
immich__docker_setup__group_id: "{{ ansible_facts.user_gid }}"
immich__docker_setup__internal_network_name: "immich_internal_network"
immich__docker_setup__external_network_name: >-
  {{ caddy__docker_setup__external_network_name }}

############################################################################################################

domain__name: "schaunis.at"

############################################################################################################

caddy__add_site__container_name: "{{ caddy__docker_setup__container_name }}"
caddy__add_site__sub_configs_dir_path: "{{ caddy__docker_setup__sub_configs_dir_path }}"
caddy__docker_setup__acme_dns_hetzner_api_token: "R5pAoQQwDb77AQS88PQ2jN0EHYrXDdf8"

caddy__add_site__site_list:
  - file_name: "immich.conf"
    tls_enabled: true
    domain_name: "immich.{{ domain__name }}"
    reverse_proxy:
      upstream_address: >-
        {{ immich__docker_setup__server_container_name }}:
        {{- immich__docker_setup__server_container_exposed_port }}

############################################################################################################

tailscale__docker_setup__dir_path: "{{ docker__base_dir_path }}/tailscale"
tailscale__docker_setup__auth_key: "tskey-auth-kr3i9c4P5F11CNTRL-vFkFgCnPpwWPWXyZDwCeyWCRv5Rxwpe8U"

############################################################################################################

# sudo zpool destroy zdata
# sudo cryptsetup close sdb0_crypt
# sudo cryptsetup close sdc0_crypt
# sudo cryptsetup close sdd0_crypt
# sudo dd if=/dev/zero of=/dev/sdb bs=4096
# sudo dd if=/dev/zero of=/dev/sdc bs=4096
# sudo dd if=/dev/zero of=/dev/sdd bs=4096
